 static int[] longestCommonSubsequence(int[] a, int[] b) {
                    int n=a.length;
        int m=b.length;
        int t[][]=new int[n+1][m+1];
        
        
        for(int i=0;i<n+1;i++){
            for(int j=0;j<m+1;j++){
                if(i==0 || j==0){
                    t[i][j]=0;
                }
                if(i>0 && j>0){
                    if(a[i-1]==b[j-1]){
                        t[i][j]=1+t[i-1][j-1];
                    }else{
                        t[i][j]=Math.max(t[i-1][j],t[i][j-1]);
                    }
                }
            }
        }
                       int length= t[n][m];

                       int[] res=new int[length];
                       int i=n;
                       int j=m;
                      while(i>0 && j>0){
                           if(a[i-1]==b[j-1]){
                               res[length-1]=a[i-1];
                               i--;
                               j--;
                               length--;
                           }else if(t[i-1][j]>t[i][j-1]){
                                       i--;
                           }else{
                               j--;
                           }
                      }
              return res;         

    }
