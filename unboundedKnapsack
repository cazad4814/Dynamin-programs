import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the unboundedKnapsack function below.
    static int unboundedKnapsack(int k, int[] arr) {
        int n=arr.length;
        int[][] t=new int[n+1][k+1];
        for(int i=0;i<n+1;i++){
            for(int j=0;j<k+1;j++){
               if(i==0 && j==0){
                   t[i][j]=0;
               }
                
                if(i>0 && j>0){
                    if(arr[i-1]<=j){
                        t[i][j]=Math.max(arr[i-1]+t[i][j-arr[i-1]],t[i-1][j]);
                    }else{
                        t[i][j]=t[i-1][j];
                    }
                }

            }
        }

return t[n][k];
    }
public static void main(String args[]){
    Scanner in =new Scanner(System.in);
    int t=in.nextInt();
    while(t--!=0){
            int n=in.nextInt();
            
            int[] arr=new int[n];
                   int sum=in.nextInt();
  
            for(int i=0;i<n;i++){
                     arr[i]=in.nextInt();
            }
     
            int res=unboundedKnapsack(sum,arr);
            System.out.println(res);
    }

}
    
   
}
